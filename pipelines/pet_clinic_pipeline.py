#!/usr/bin/env python
from gomatic import *
import os, re

print "Updating PetClinic Pipeline..."
go_server_host = re.search('https?://([a-z0-9.\-._~%]+)', os.environ['GO_SERVER_URL']).group(1)
go_server_url = "%s:%s" % (go_server_host, "8153")
configurator = GoCdConfigurator(HostRestClient(go_server_url))
pipeline = configurator\
	.ensure_pipeline_group("sample")\
	.ensure_replacement_of_pipeline("PetClinic")\
	.set_git_material(GitMaterial("https://github.com/andycollon/devops-in-practice-workshop.git", ignore_patterns=set(['pipelines/*'])))
stage = pipeline.ensure_stage("commit")
job = stage.ensure_job("build-and-publish").ensure_environment_variables({'MAVEN_OPTS': '-Xmx1024m', 'GCLOUD_PROJECT_ID': 'uke12359575-devopsday'}).ensure_encrypted_environment_variables({'GCLOUD_SERVICE_KEY': 'AES:dopZy9fre6a8DJz/7ZaHcg==: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'}).set_elastic_profile_id("docker-jdk")
job.add_task(ExecTask(['./mvnw', 'clean package']))
job.add_task(ExecTask(['bash', '-c', 'docker build --tag pet-app:$GO_PIPELINE_LABEL --build-arg JAR_FILE=target/spring-petclinic-2.0.0.BUILD-SNAPSHOT.jar .']))
job.add_task(ExecTask(['bash', '-c', 'docker login -u _json_key -p"$(echo $GCLOUD_SERVICE_KEY | base64 -d)" https://us.gcr.io']))
job.add_task(ExecTask(['bash', '-c', 'docker tag pet-app:$GO_PIPELINE_LABEL us.gcr.io/$GCLOUD_PROJECT_ID/pet-app:$GO_PIPELINE_LABEL']))
job.add_task(ExecTask(['bash', '-c', 'docker push us.gcr.io/$GCLOUD_PROJECT_ID/pet-app:$GO_PIPELINE_LABEL']))
stage = pipeline.ensure_stage("deploy").ensure_environment_variables({'GCLOUD_ZONE': 'us-central1-a', 'GCLOUD_PROJECT_ID': 'uke12359575-devopsday', 'GCLOUD_CLUSTER': 'devops-workshop-gke'}).ensure_encrypted_environment_variables({'GCLOUD_SERVICE_KEY': 'AES:CDJPhzoximekO5HM1BJOMg==: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'})
job = stage.ensure_job("deploy").set_elastic_profile_id("kubectl")
job.add_task(ExecTask(['bash', '-c', 'echo $GCLOUD_SERVICE_KEY | base64 -d > secret.json && chmod 600 secret.json']))
job.add_task(ExecTask(['bash', '-c', 'gcloud auth activate-service-account --key-file secret.json']))
job.add_task(ExecTask(['bash', '-c', 'gcloud container clusters get-credentials $GCLOUD_CLUSTER --zone $GCLOUD_ZONE --project $GCLOUD_PROJECT_ID']))
job.add_task(ExecTask(['bash', '-c', './deploy.sh']))
job.add_task(ExecTask(['bash', '-c', 'rm secret.json']))

configurator.save_updated_config()
